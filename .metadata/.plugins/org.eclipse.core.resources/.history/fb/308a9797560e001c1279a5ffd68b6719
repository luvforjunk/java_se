package miniproject1;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class CorrectFrame extends JFrame {
	private JLabel nameL, idL, pwdL, pwdcheckL, emailL, phoneL;
	private JTextField nameT, idT, pwdT, pwdcheckT, emailT, phoneT;
	private JButton cancelBtn, pwdcheckBtn, writeBtn, resetBtn;
	boolean idok, pwdok, emailok = false;

	public CorrectFrame(String id, String pwd) {
		AmasvinDAO dao = AmasvinDAO.getInstance();
		String name = dao.loginMember(id, pwd);
		setTitle("반갑습니다, " + name + "님 아마스빈입니다");

		JFrame jf = new JFrame();
		setLayout(null);

		// Label
		JPanel p = new JPanel();
		p.setLayout(null);

		nameL = new JLabel("이름");
		nameL.setBounds(20, 20, 70, 30);
		p.add(nameL);

		idL = new JLabel("아이디");
		idL.setBounds(20, 90, 70, 30);
		p.add(idL);

		pwdL = new JLabel("비밀번호");
		pwdL.setBounds(20, 160, 70, 30);
		p.add(pwdL);

		pwdcheckL = new JLabel("비밀번호 재입력");
		pwdcheckL.setBounds(20, 230, 120, 30);
		p.add(pwdcheckL);

		emailL = new JLabel("이메일");
		emailL.setBounds(20, 300, 90, 30);
		p.add(emailL);

		phoneL = new JLabel("휴대폰 번호");
		phoneL.setBounds(20, 440, 100, 30);
		p.add(phoneL);

		// TextField
		nameT = new JTextField();
		nameT.setBounds(20, 50, 340, 30);
		p.add(nameT);

		idT = new JTextField();
		idT.setBounds(20, 120, 340, 30);
		p.add(idT);

		pwdT = new JTextField();
		pwdT.setBounds(20, 190, 340, 30);
		p.add(pwdT);

		pwdcheckT = new JTextField();
		pwdcheckT.setBounds(20, 260, 340, 30);
		p.add(pwdcheckT);

		emailT = new JTextField();
		emailT.setBounds(20, 330, 340, 30);
		p.add(emailT);

		phoneT = new JTextField();
		phoneT.setBounds(20, 470, 340, 30);
		p.add(phoneT);

		// Font
		Font labelF = new Font("맑은고딕", Font.BOLD, 15);
		Font textF = new Font("맑은고딕", Font.BOLD, 15);
		Font ButtonF = new Font("맑은고딕", Font.CENTER_BASELINE, 5);

		nameL.setFont(labelF);
		nameT.setFont(textF);
		idL.setFont(labelF);
		idT.setFont(textF);
		pwdL.setFont(labelF);
		pwdT.setFont(textF);
		pwdcheckL.setFont(labelF);
		pwdcheckT.setFont(textF);
		emailL.setFont(labelF);
		emailT.setFont(textF);
		phoneL.setFont(labelF);
		phoneT.setFont(textF);

		// Button
		writeBtn = new JButton("수정");
		resetBtn = new JButton("다시 작성");
		pwdcheckBtn = new JButton("일치 확인");
		cancelBtn = new JButton("취소");
		pwdcheckBtn.setBounds(365, 260, 115, 30);
		pwdcheckBtn.setBackground(new Color(255, 255, 204));
		p.add(pwdcheckBtn);
		writeBtn.setBounds(20, 530, 150, 60);
		resetBtn.setBounds(180, 530, 150, 60);
		cancelBtn.setBounds(340, 530, 150, 60);

		JPanel p2 = new JPanel();
		p2.setBackground(new Color(195, 219, 242));
		p2.add(writeBtn);
		writeBtn.setBackground(new Color(255, 255, 204));

		p2.add(resetBtn);
		resetBtn.setBackground(new Color(255, 255, 204));

		p2.add(cancelBtn);
		resetBtn.setBackground(new Color(255, 255, 204));

		Container c = getContentPane();
		c.setBackground(new Color(195, 219, 242));
		c.add("North", p);
		c.add("South", p2);

		c.add(nameL);
		c.add(nameT);
		c.add(idL);
		c.add(idT);
		c.add(pwdL);
		c.add(pwdT);
		c.add(pwdcheckL);
		c.add(pwdcheckT);
		c.add(pwdcheckBtn);
		c.add(emailL);
		c.add(emailT);
		c.add(phoneL);
		c.add(phoneT);
		c.add(writeBtn);
		c.add(resetBtn);
		c.add(cancelBtn);

		setBounds(800, 100, 500, 650);
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);

		writeBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {

				if (nameT.getText().isEmpty() || idT.getText().isEmpty() || pwdT.getText().isEmpty()
						|| emailT.getText().isEmpty() || phoneT.getText().isEmpty() || pwdcheckT.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "모두 작성해주세요");
					return;
				} else if (pwdok == false) {
					JOptionPane.showMessageDialog(null, "비밀번호 확인 하세요");
					return;
				} else {
					String name = nameT.getText();
					String id = idT.getText();
					String pwd = pwdT.getText();
					String email = emailT.getText();
					String phone = phoneT.getText();

					// DB
					AmasvinDAO dao = AmasvinDAO.getInstance();
					dao.UpdateMember(name, pwd, email, phone, id);

					JOptionPane.showMessageDialog(null, "수정 되었습니다");

					dispose();
					new HomeFrame(id, pwd);
					setVisible(false);
				}
			}
		});

		cancelBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				dispose();
				new HomeFrame(id, pwd);
				setVisible(false);
			}
		});

		resetBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				nameT.setText("");
				idT.setText("");
				pwdT.setText("");
				emailT.setText("");
				phoneT.setText("");
				pwdcheckT.setText("");
			}
		});

		pwdcheckBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				if (pwdT.getText().equals(pwdcheckT.getText())) {
					pwdok = true;

					JOptionPane.showMessageDialog(null, "비밀번호가 일치합니다");
				} else {
					pwdok = false;
					JOptionPane.showMessageDialog(null, "비밀번호가 일치하지 않습니다." + "\n" + "다시 입력하세요.");
					pwdcheckT.setText("");
					// writeBtn.setEnabled(false);
				}
			}
		});

	}
}
